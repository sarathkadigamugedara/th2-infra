registries: {}
ingress:
  ingressClass: nginx
  host: ''
  annotations:
    default:
      nginx.ingress.kubernetes.io/enable-cors: 'true'
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/use-regex: 'true'
      nginx.ingress.kubernetes.io/configuration-snippet: rewrite ^/([a-z\-0-9]*)$ $scheme://$http_host/$1/ redirect;
    extra: {}
commonAnnotations: {}
prometheus:
  operator:
    enabled: true
    serviceMonitor:
      namespace: monitoring
      selector:
        release: prometheus
        app: kube-prometheus-stack
clusterDomain: cluster.local
helmoperator:
  internal: true
  helm:
    versions: v3
  fullnameOverride: helm-operator
  nameOverrde: helm-operator
  chartsSyncInterval: 300m
  prometheus:
    enabled: enabled
    serviceMonitor:
      create: true
      namespace: monitoring
infraEditor:
  image:
    repository: ghcr.io/th2-net/th2-infra-editor
    tag: 1.0.65-TH2-3209-2226517175
infraEditorV2:
  enabled: true
  image:
    repository: ghcr.io/th2-net/th2-infra-editor-v2
    tag: 2.0.15-TH2-3209-2183869724
infraRepo:
  image:
    repository: ghcr.io/th2-net/infra-repo
    tag: 1.8.0@sha256:5f3f704842aa290d6a3cb3ad3ed4aa14ff8f2be4fc2d52a3b1ac6057dd650955
infraOperator:
  prometheusConfiguration:
    enabled: true
    port: 9752
  image:
    repository: ghcr.io/th2-net/th2-infra-operator
    tag: 3.6.4
  config:
    chart:
      repository: http://infra-repo:8080
      version: 1.0.0
      name: box-chart
    namespacePrefixes:
      - th2-
    k8sUrl: <kubernetes-external-entrypoint>
    rabbitMQManagement:
      port: '15672'
      username: th2
      password: ${RABBITMQ_PASS}
      persistence: true
      schemaPermissions:
        configure: ''
        read: .*
        write: .*
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 30
  resources:
    limits:
      cpu: 800m
      memory: 1200Mi
    requests:
      cpu: 200m
      memory: 500Mi
  jvm:
    javaToolOptions: '-XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:MaxRAMPercentage=85'
infraMgr:
  prometheusConfiguration:
    enabled: true
    port: 9752
  image:
    repository: ghcr.io/th2-net/th2-infra-mgr
    tag: 1.7.19
  git:
    secretName: infra-mgr
    sshDir: /home/service/keys
    repository: git@github.com:th2-net/th2-demo-configuration.git
    repositoryLocalCache: /home/service/repository
    httpAuthUsername: ''
    httpAuthPassword: ''
    gitFetchInterval: '14000'
  rabbitmq:
    vHostPrefix: th2-
    usernamePrefix: th2-user-
    secret: rabbitmq
    passwordLength: 24
  cassandra:
    keyspacePrefix: schema_
    secret: cassandra
  kubernetes:
    namespacePrefix: th2-
    configMaps:
      logging: logging-config-template
      rabbitmq: rabbit-mq-app-config
      rabbitmq-ext: rabbit-mq-external-app-config
      cassandra: cradle
      cassandra-ext: cradle-external
      prometheus: prometheus-app-config
    secrets: []
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 30
  resources:
    limits:
      cpu: 500m
      memory: 2500Mi
    requests:
      cpu: 200m
      memory: 500Mi
  jvm:
    javaToolOptions: '-XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:MaxRAMPercentage=85'
infraGit:
  internal: false
  nodePort: 32600
  image:
    repository: ghcr.io/th2-net/git-ssh
    tag: v0.1.0
  pvc:
    accessModes: ReadWriteMany
    storage: 5Gi
    storageClassName: local-storage
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 100Mi
rabbitmq:
  internal: true
  resources:
    limits:
      memory: 3000Mi
  memoryHighWatermark:
    enabled: true
    type: absolute
    value: 2500MB
  fullnameOverride: rabbitmq
  extraConfiguration: |-
    default_vhost = th2
    disk_free_limit.absolute = 10GB
  auth:
    username: th2
    password: ''
    erlangCookie: ''
  rabbitmqExchange: th2-exchange
  replicaCount: 1
  podAntiAffinityPreset: hard
  persistence:
    enabled: true
    storageClass: local-storage
    size: 10Gi
  service:
    type: NodePort
    nodePort: 32000
    managerNodePort: 32025
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
        app: kube-prometheus-stack
      path: /metrics
  prometheus:
    operator:
      enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: $1
      nginx.ingress.kubernetes.io/configuration-snippet: |
        rewrite ^/([a-z\-0-9]*)$ $scheme://$http_host/$1/ redirect;
        if ($request_uri ~ "^/rabbitmq(/.*)") {
          proxy_pass http://upstream_balancer$1;
          break;
        }
    extraHosts:
      - name: ''
        path: /rabbitmq($|/.*)
cassandra:
  cradle:
    instanceName: th2-infra
    timeout: 5000
    pageSize: 5000
    cradleMaxEventBatchSize: '1048576'
    cradleMaxMessageBatchSize: '1048576'
  internal: true
  fullnameOverride: cassandra
  cluster:
    datacenter: dc1
  dbUser:
    user: th2
    password: ''
  keyspace: cradle
  persistence:
    enabled: false
    storageClass: local-storage
    size: 50Gi
dashboard:
  internal: true
  image:
    repository: kubernetesui/dashboard
  protocolHttp: true
  rbac:
    create: true
    clusterRoleMetrics: true
  serviceAccount:
    create: false
    name: th2infra-kubernetes-dashboard
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: $1
      nginx.ingress.kubernetes.io/configuration-snippet: rewrite ^/([a-z\-0-9]*)$ $scheme://$http_host/$1/ redirect;
    paths:
      - /dashboard($|/.*)
    hosts:
      - ''
